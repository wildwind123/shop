// Code generated by ogen, DO NOT EDIT.

package ogenapi

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	ProductHandler
}

// ProductHandler handles operations described by OpenAPI v3 specification.
//
// x-ogen-operation-group: Product
type ProductHandler interface {
	// ProductGet implements GET /product operation.
	//
	// Get product list.
	//
	// GET /product
	ProductGet(ctx context.Context, params ProductGetParams) (ProductGetRes, error)
	// ProductPost implements POST /product operation.
	//
	// Receive the exact message you've sent.
	//
	// POST /product
	ProductPost(ctx context.Context, req *ProductPostReq) (ProductPostRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
